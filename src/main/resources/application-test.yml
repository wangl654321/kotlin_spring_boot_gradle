#mysql和阿里druid配置
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    # 高版本不需要 driver-class-name: com.mysql.jdbc.Driver
    #    url: jdbc:oracle:thin:@192.168.1.98:1521:orcl
    url: jdbc:mysql://localhost:3306/ims?useUnicode=true&characterEncoding=utf8
    username: root
    password: zz654321

    #    driver-class-name: oracle.jdbc.driver.OracleDriver
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    #validationQuery: select 'x'
    testWhileIdle: false
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true

  #servlet:
  #    multipart:
  #      max-file-size: 4096MB
  #      max-request-size: 4096MB
  #      enabled: true
  #  freemarker:
  #    suffix: .html
  #    request-context-attribute: request
  #    cache: false
  devtools:
    restart:
      enabled: false
      additional-paths: src/main/java
      exclude: resources/*

#cmodes:
#  redis:
#    open: false  # 是否开启redis缓存  true开启   false关闭
#  shiro:
#    redis: fslse # true表示shiro session存到redis里，需要开启redis，才会生效【分布式场景】
#  reids:
#    host: 127.0.0.1
#    port: 6379
#    password:
#    database: 0
#    timeout: 1000
#    jedis:
#      pool:
#        max-active: 6000
#        max-wait: 1000
#        max-idle: 400

#日志打印级别
debug: false

logging:
  level:
    com.auth.sp.common: DEBUG
  file: E:/project/authority/log/authority.log
  configLocation: classpath:log4j2.xml